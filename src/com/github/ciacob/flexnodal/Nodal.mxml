<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
    xmlns:s="library://ns.adobe.com/flex/spark"
    xmlns:mx="library://ns.adobe.com/flex/mx"
    xmlns:local="com.github.ciacob.flexnodal.*"
    xmlns:components="com.github.ciacob.flexnodal.components.*"
    preinitialize="_onPreinitialize()">

    <fx:Script>
        <![CDATA[
            import com.github.ciacob.flexnodal.utils.InstanceFactory;
            import mx.core.UIComponent;
            import com.github.ciacob.flexnodal.events.NodalEvent;
            import com.github.ciacob.flexnodal.events.NodalEvent;
            
            [Bindable]
            private var _selectedNode:Array;
            
            private const _drawablesFactory:InstanceFactory = new InstanceFactory(
                    UIComponent,
                    _initDrawable,
                    _purgeDrawable);
            
            private static function _initDrawable(drawable:UIComponent):void {
                drawable.doubleClickEnabled = true;
                drawable.useHandCursor = true;
                drawable.buttonMode = true;
            }
            
            private static function _purgeDrawable(drawable:UIComponent):void {
                drawable.graphics.clear();
                drawable.x = drawable.y = 0;
            }
            
            private function _onPreinitialize():void {
            
            }
            
            private function _onSelectionChanged(event:NodalEvent):void {
                _selectedNode = event.payload ? event.payload.selectedNode : null;
                trace ('--> selection info:\n', JSON.stringify (event.payload));
            }

            private function _onNodesChanged (event : NodalEvent) : void {
                trace ('==> chart values:', chart.values? '[' + chart.values.join('] [') + ']' : 'NULL');
            }
        ]]>
    </fx:Script>

    <s:VGroup width="100%" height="100%"
        horizontalAlign="center">
        <components:LineChartLayer
            id="chart"
            width="100%" height="100%"
            lineColor="#000d43"
            lineColorOver="#0076bf"
            lineColorSelected="#00c8ff"
            lineColorAnchor="#9000ff"
            lineThickness="3"
            markersFactory="{_drawablesFactory}"
            values="{[ [0, 0.1], [0.5, 0.8], [0.95, 0], [1, 0] ]}"
            selectionChange="_onSelectionChanged (event)"
            nodesChange="_onNodesChanged (event)"/>

    <s:HGroup>
        <s:Button label="Clear selection"
            enabled="{!!_selectedNode}"
            click="{chart.clearSelection()}" />

        <s:Button label="Delete selection"
            enabled="{!!_selectedNode}"
            click="{chart.deleteSelection()}" />

    </s:HGroup>
    </s:VGroup>

</s:Group>
